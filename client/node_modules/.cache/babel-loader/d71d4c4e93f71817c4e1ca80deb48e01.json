{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/src/components/CreateRecipe/CreateRecipe.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport auth0Client from \"../../Auth\";\nimport axios from \"axios\";\nimport UploadImage from \"./UploadImage\";\n\nvar CreateRecipe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateRecipe, _Component);\n\n  function CreateRecipe(props) {\n    var _this;\n\n    _classCallCheck(this, CreateRecipe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateRecipe).call(this, props));\n    _this.state = {\n      disabled: false,\n      title: \"\",\n      description: \"\",\n      ingredients: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CreateRecipe, [{\n    key: \"updateIngredients\",\n    value: function updateIngredients(value) {\n      this.setState({\n        ingredients: value\n      });\n    }\n  }, {\n    key: \"updateDescription\",\n    value: function updateDescription(value) {\n      this.setState({\n        description: value\n      });\n    }\n  }, {\n    key: \"updateTitle\",\n    value: function updateTitle(value) {\n      this.setState({\n        title: value\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var title, description, ingredients;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                title = document.getElementById(\"title\");\n                description = document.getElementById(\"descriptionBox\");\n                ingredients = document.getElementById(\"ingredientsBox\"); // Return alert if user does not fill in the inputs\n\n                if (!(title && !title.value)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                alert(\"Please fill in the missing blanks!\");\n                _context.next = 19;\n                break;\n\n              case 7:\n                if (!(description && !description.value)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                alert(\"Please fill in the missing blanks!\");\n                _context.next = 19;\n                break;\n\n              case 11:\n                if (!(ingredients && !ingredients.value)) {\n                  _context.next = 15;\n                  break;\n                }\n\n                alert(\"Please fill in the missing blanks!\");\n                _context.next = 19;\n                break;\n\n              case 15:\n                // Post to server if users fill in all the inputs\n                this.setState({\n                  disabled: true\n                });\n                _context.next = 18;\n                return axios.post( // Passes the following to '/'\n                \"http://localhost:8081\", {\n                  title: this.state.title,\n                  description: this.state.description,\n                  ingredients: this.state.ingredients\n                }, {\n                  headers: {\n                    Authorization: \"Bearer \".concat(auth0Client.getIdToken()) // Check authorization and fetch token\n\n                  }\n                });\n\n              case 18:\n                this.props.history.push(\"/\");\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function submit() {\n        return _submit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Create new recipe\")), React.createElement(\"div\", {\n        className: \"card-body text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"input\", {\n        id: \"title\",\n        maxLength: \"30\",\n        disabled: this.state.disabled,\n        type: \"text\",\n        onBlur: function onBlur(e) {\n          _this2.updateTitle(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"Enter recipe title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(UploadImage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fileupload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Upload Image:\"), React.createElement(\"label\", {\n        id: \"myImageLabel\",\n        htmlFor: \"myImage\",\n        className: \"btn btn-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Choose image\"), React.createElement(\"input\", {\n        id: \"myImage\",\n        type: \"file\",\n        name: \"myImage\",\n        accept: \"image/x-png,image/jpeg\",\n        onBlur: function onBlur(e) {\n          _this2.updateImage(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"textarea\", {\n        id: \"descriptionBox\",\n        disabled: this.state.disabled,\n        type: \"text\",\n        onBlur: function onBlur(e) {\n          _this2.updateDescription(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"Enter the description of your recipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"ingredients\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Ingredients:\"), React.createElement(\"textarea\", {\n        id: \"ingredientsBox\",\n        disabled: this.state.disabled,\n        type: \"text\",\n        onBlur: function onBlur(e) {\n          _this2.updateIngredients(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"Enter the ingredients of your recipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"submitButton\",\n        disabled: this.state.disabled,\n        className: \"btn dark-space\",\n        onClick: function onClick() {\n          _this2.submit();\n\n          document.getElementById(\"uploadButton\").click();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return CreateRecipe;\n}(Component);\n\nexport default withRouter(CreateRecipe);","map":{"version":3,"sources":["/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/client/src/components/CreateRecipe/CreateRecipe.js"],"names":["React","Component","withRouter","auth0Client","axios","UploadImage","CreateRecipe","props","state","disabled","title","description","ingredients","value","setState","document","getElementById","alert","post","headers","Authorization","getIdToken","history","push","e","updateTitle","target","updateImage","updateDescription","updateIngredients","submit","click"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport auth0Client from \"../../Auth\";\nimport axios from \"axios\";\n\nimport UploadImage from \"./UploadImage\";\n\nclass CreateRecipe extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      disabled: false,\n      title: \"\",\n      description: \"\",\n      ingredients: \"\"\n    };\n  }\n\n  updateIngredients(value) {\n    this.setState({\n      ingredients: value\n    });\n  }\n\n  updateDescription(value) {\n    this.setState({\n      description: value\n    });\n  }\n\n  updateTitle(value) {\n    this.setState({\n      title: value\n    });\n  }\n\n  async submit() {\n    var title = document.getElementById(\"title\");\n    var description = document.getElementById(\"descriptionBox\");\n    var ingredients = document.getElementById(\"ingredientsBox\");\n\n    // Return alert if user does not fill in the inputs\n    if (title && !title.value) {\n      alert(\"Please fill in the missing blanks!\");\n    } else if (description && !description.value) {\n      alert(\"Please fill in the missing blanks!\");\n    } else if (ingredients && !ingredients.value) {\n      alert(\"Please fill in the missing blanks!\");\n    } else {\n      // Post to server if users fill in all the inputs\n      this.setState({\n        disabled: true\n      });\n      await axios.post(\n        // Passes the following to '/'\n        \"http://localhost:8081\",\n        {\n          title: this.state.title,\n          description: this.state.description,\n          ingredients: this.state.ingredients\n        },\n        {\n          headers: { Authorization: `Bearer ${auth0Client.getIdToken()}` } // Check authorization and fetch token\n        }\n      );\n      this.props.history.push(\"/\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Create new recipe</h3>\n              </div>\n              <div className=\"card-body text-left\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title:</label>\n                  <input\n                    id=\"title\"\n                    maxLength=\"30\"\n                    disabled={this.state.disabled}\n                    type=\"text\"\n                    onBlur={e => {\n                      this.updateTitle(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Enter recipe title\"\n                  />\n                </div>\n                <UploadImage />\n                <div className=\"form-group\">\n                  <label htmlFor=\"fileupload\">Upload Image:</label>\n                  <label\n                    id=\"myImageLabel\"\n                    htmlFor=\"myImage\"\n                    className=\"btn btn-primary \"\n                  >\n                    Choose image\n                  </label>\n                  <input\n                    id=\"myImage\"\n                    type=\"file\"\n                    name=\"myImage\"\n                    accept=\"image/x-png,image/jpeg\"\n                    onBlur={e => {\n                      this.updateImage(e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"description\">Description:</label>\n                  <textarea\n                    id=\"descriptionBox\"\n                    disabled={this.state.disabled}\n                    type=\"text\"\n                    onBlur={e => {\n                      this.updateDescription(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Enter the description of your recipe\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"ingredients\">Ingredients:</label>\n                  <textarea\n                    id=\"ingredientsBox\"\n                    disabled={this.state.disabled}\n                    type=\"text\"\n                    onBlur={e => {\n                      this.updateIngredients(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Enter the ingredients of your recipe\"\n                  />\n                </div>\n                <button\n                  id=\"submitButton\"\n                  disabled={this.state.disabled}\n                  className=\"btn dark-space\"\n                  onClick={() => {\n                    this.submit();\n                    document.getElementById(\"uploadButton\").click();\n                  }}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreateRecipe);\n"]},"metadata":{},"sourceType":"module"}