{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/src/Questions/Questions.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nvar Questions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Questions, _Component);\n\n  function Questions(props) {\n    var _this;\n\n    _classCallCheck(this, Questions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Questions).call(this, props));\n    _this.state = {\n      questions: null\n    };\n    return _this;\n  }\n\n  _createClass(Questions, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var questions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:8081/');\n\n              case 2:\n                questions = _context.sent.data;\n                this.setState({\n                  questions: questions\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/create-recipe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card text-white bg-secondary mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Need help? Ask here!\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"+ New Recipe\"), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Click here to create your own recipe!\")))), this.state.questions === null && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading questions...\"), this.state.questions && this.state.questions.map(function (question) {\n        return React.createElement(\"div\", {\n          key: question.id,\n          className: \"col-sm-12 col-md-4 col-lg-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/question/\".concat(question.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-white bg-success mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Answers: \", question.answers), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, question.title), React.createElement(\"p\", {\n          className: \"card-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, question.description)))));\n      })));\n    }\n  }]);\n\n  return Questions;\n}(Component);\n\nexport default Questions;","map":{"version":3,"sources":["/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/src/Questions/Questions.js"],"names":["React","Component","Link","axios","Questions","props","state","questions","get","data","setState","map","question","id","answers","title","description"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAHiB;AAMlB;;;;;;;;;;;;;;uBAG0BJ,KAAK,CAACK,GAAN,CAAU,wBAAV,C;;;AAAnBD,gBAAAA,S,iBAAwDE,I;AAC9D,qBAAKC,QAAL,CAAc;AACZH,kBAAAA,SAAS,EAATA;AADY,iBAAd;;;;;;;;;;;;;;;;6BAKO;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFF,CAFF,CADF,CADF,EAUG,KAAKD,KAAL,CAAWC,SAAX,KAAyB,IAAzB,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAVpC,EAYI,KAAKD,KAAL,CAAWC,SAAX,IAAwB,KAAKD,KAAL,CAAWC,SAAX,CAAqBI,GAArB,CAAyB,UAAAC,QAAQ;AAAA,eACvD;AAAK,UAAA,GAAG,EAAEA,QAAQ,CAACC,EAAnB;AAAuB,UAAA,SAAS,EAAC,6BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,EAAE,sBAAeD,QAAQ,CAACC,EAAxB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAuCD,QAAQ,CAACE,OAAhD,CADF,EAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BF,QAAQ,CAACG,KAArC,CADF,EAEE;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BH,QAAQ,CAACI,WAAnC,CAFF,CAFF,CADF,CADF,CADuD;AAAA,OAAjC,CAZ5B,CADF,CADF;AA+BD;;;;EAhDqBf,S;;AAmDxB,eAAeG,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: null,\n    };\n  }\n\n  async componentDidMount() {\n    const questions = (await axios.get('http://localhost:8081/')).data;\n    this.setState({\n      questions,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Link to=\"/create-recipe\">\n            <div className=\"card text-white bg-secondary mb-3\">\n              <div className=\"card-header\">Need help? Ask here!</div>\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">+ New Recipe</h4>\n                <p className=\"card-text\">Click here to create your own recipe!</p>\n              </div>\n            </div>\n          </Link>\n          {this.state.questions === null && <p>Loading questions...</p>}\n          {\n            this.state.questions && this.state.questions.map(question => (\n              <div key={question.id} className=\"col-sm-12 col-md-4 col-lg-3\">\n                <Link to={`/question/${question.id}`}>\n                  <div className=\"card text-white bg-success mb-3\">\n                    <div className=\"card-header\">Answers: {question.answers}</div>\n                    <div className=\"card-body\">\n                      <h4 className=\"card-title\">{question.title}</h4>\n                      <p className=\"card-text\">{question.description}</p>\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            ))\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Questions;\n"]},"metadata":{},"sourceType":"module"}