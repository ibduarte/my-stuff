{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/src/Recipe/Recipe.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SubmitAnswer from './SubmitAnswer';\nimport auth0Client from '../Auth';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question(props) {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Question).call(this, props));\n    _this.state = {\n      question: null\n    };\n    _this.submitAnswer = _this.submitAnswer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.refreshQuestion();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"refreshQuestion\",\n    value: function () {\n      var _refreshQuestion = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var params, question;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                params = this.props.match.params;\n                _context2.next = 3;\n                return axios.get(\"http://localhost:8081/\".concat(params.questionId));\n\n              case 3:\n                question = _context2.sent.data;\n                this.setState({\n                  question: question\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function refreshQuestion() {\n        return _refreshQuestion.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"submitAnswer\",\n    value: function () {\n      var _submitAnswer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(answer) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return axios.post(\"http://localhost:8081/answer/\".concat(this.state.question.id), {\n                  answer: answer\n                }, {\n                  headers: {\n                    'Authorization': \"Bearer \".concat(auth0Client.getIdToken())\n                  }\n                });\n\n              case 2:\n                _context3.next = 4;\n                return this.refreshQuestion();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function submitAnswer(_x) {\n        return _submitAnswer.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var question = this.state.question;\n      if (question === null) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading ...\");\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"jumbotron col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, question.title), React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, question.description), React.createElement(\"hr\", {\n        className: \"my-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(SubmitAnswer, {\n        questionId: question.id,\n        submitAnswer: this.submitAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Answers:\"), question.answers.map(function (answer, idx) {\n        return React.createElement(\"p\", {\n          className: \"lead\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, answer.answer);\n      }))));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nexport default Question;","map":{"version":3,"sources":["/Users/lauirvin/Documents/University/Year 3/304CEM/yummy/frontend/src/Recipe/Recipe.js"],"names":["React","Component","axios","SubmitAnswer","auth0Client","Question","props","state","question","submitAnswer","bind","refreshQuestion","params","match","get","questionId","data","setState","answer","post","id","headers","getIdToken","title","description","answers","map","idx"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,SAAxB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AANiB;AAOlB;;;;;;;;;;;;;uBAGO,KAAKC,eAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;AAIWC,gBAAAA,M,GAAa,KAAKN,K,CAA3BO,K,CAASD,M;;uBACOV,KAAK,CAACY,GAAN,iCAAmCF,MAAM,CAACG,UAA1C,E;;;AAAlBP,gBAAAA,Q,kBAA2EQ,I;AACjF,qBAAKC,QAAL,CAAc;AACZT,kBAAAA,QAAQ,EAARA;AADY,iBAAd;;;;;;;;;;;;;;;;;;;iDAKiBU,M;;;;;;uBACXhB,KAAK,CAACiB,IAAN,wCAA2C,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,EAA/D,GAAqE;AACzEF,kBAAAA,MAAM,EAANA;AADyE,iBAArE,EAEH;AACDG,kBAAAA,OAAO,EAAE;AAAE,sDAA2BjB,WAAW,CAACkB,UAAZ,EAA3B;AAAF;AADR,iBAFG,C;;;;uBAKA,KAAKX,eAAL,E;;;;;;;;;;;;;;;;6BAGC;AAAA,UACAH,QADA,GACY,KAAKD,KADjB,CACAC,QADA;AAEP,UAAIA,QAAQ,KAAK,IAAjB,EAAuB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACvB,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BA,QAAQ,CAACe,KAApC,CADF,EAEE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBf,QAAQ,CAACgB,WAA9B,CAFF,EAGE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAEhB,QAAQ,CAACY,EAAnC;AAAuC,QAAA,YAAY,EAAE,KAAKX,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAOID,QAAQ,CAACiB,OAAT,CAAiBC,GAAjB,CAAqB,UAACR,MAAD,EAASS,GAAT;AAAA,eACnB;AAAG,UAAA,SAAS,EAAC,MAAb;AAAoB,UAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BT,MAAM,CAACA,MAAtC,CADmB;AAAA,OAArB,CAPJ,CADF,CADF,CADF;AAkBD;;;;EApDoBjB,S;;AAuDvB,eAAeI,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport SubmitAnswer from './SubmitAnswer';\nimport auth0Client from '../Auth';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: null,\n    };\n\n    this.submitAnswer = this.submitAnswer.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.refreshQuestion();\n  }\n\n  async refreshQuestion() {\n    const { match: { params } } = this.props;\n    const question = (await axios.get(`http://localhost:8081/${params.questionId}`)).data;\n    this.setState({\n      question,\n    });\n  }\n\n  async submitAnswer(answer) {\n    await axios.post(`http://localhost:8081/answer/${this.state.question.id}`, {\n      answer,\n    }, {\n      headers: { 'Authorization': `Bearer ${auth0Client.getIdToken()}` }\n    });\n    await this.refreshQuestion();\n  }\n\n  render() {\n    const {question} = this.state;\n    if (question === null) return <p>Loading ...</p>;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"jumbotron col-12\">\n            <h1 className=\"display-3\">{question.title}</h1>\n            <p className=\"lead\">{question.description}</p>\n            <hr className=\"my-4\" />\n            <SubmitAnswer questionId={question.id} submitAnswer={this.submitAnswer} />\n            <p>Answers:</p>\n            {\n              question.answers.map((answer, idx) => (\n                <p className=\"lead\" key={idx}>{answer.answer}</p>\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}