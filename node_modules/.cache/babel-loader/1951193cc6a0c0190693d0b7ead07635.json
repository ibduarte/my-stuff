{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lauirvin/Desktop/yummy/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lauirvin/Desktop/yummy/src/components/CreateItem/CreateItem.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport auth0Client from \"../../Auth\";\nimport axios from \"axios\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\n\nvar CreateItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateItem, _Component);\n\n  function CreateItem(props) {\n    var _this;\n\n    _classCallCheck(this, CreateItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateItem).call(this, props));\n    _this.state = {\n      disabled: false,\n      title: \"\",\n      description: \"\",\n      price: \"\",\n      country: \"\",\n      region: \"\",\n      condition: \"\",\n      currency: \"\",\n      image: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateItem, [{\n    key: \"updateImage\",\n    value: function updateImage(value) {\n      this.setState({\n        image: e.target.files[0]\n      });\n    }\n  }, {\n    key: \"updateCurrency\",\n    value: function updateCurrency(value) {\n      this.setState({\n        currency: value\n      });\n    }\n  }, {\n    key: \"updatePrice\",\n    value: function updatePrice(value) {\n      this.setState({\n        price: value\n      });\n    }\n  }, {\n    key: \"updateCountry\",\n    value: function updateCountry(val) {\n      this.setState({\n        country: val\n      });\n    }\n  }, {\n    key: \"updateCondition\",\n    value: function updateCondition(val) {\n      this.setState({\n        condition: val\n      });\n    }\n  }, {\n    key: \"updateRegion\",\n    value: function updateRegion(val) {\n      this.setState({\n        region: val\n      });\n    }\n  }, {\n    key: \"updateDescription\",\n    value: function updateDescription(value) {\n      this.setState({\n        description: value\n      });\n    }\n  }, {\n    key: \"updateTitle\",\n    value: function updateTitle(value) {\n      this.setState({\n        title: value\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var data, formData, key, config;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = {\n                  title: this.state.title,\n                  description: this.state.description,\n                  price: this.state.price,\n                  country: this.state.country,\n                  region: this.state.region,\n                  condition: this.state.condition,\n                  currency: this.state.currency\n                };\n                formData = new FormData();\n                formData.append(\"imageBox\", this.state.image); // Add image to form data\n\n                for (key in data) {\n                  formData.append(key, data[key]);\n                }\n\n                config = {\n                  headers: {\n                    Authorization: \"Bearer \".concat(auth0Client.getIdToken()),\n                    // Check authorization and fetch token\n                    \"content-type\": \"multipart/form-data\"\n                  }\n                }; // var title = document.getElementById(\"title\");\n                // var description = document.getElementById(\"descriptionBox\");\n                // var price = document.getElementById(\"priceBox\");\n                // var country = document.getElementById(\"countryBox\");\n                // var region = document.getElementById(\"regionBox\");\n                // var condition = document.getElementById(\"conditionBox\");\n                // var currency = document.getElementById(\"currencyBox\");\n                // var image = document.getElementById(\"imageBox\");\n                // // Return alert if user does not fill in the inputs\n                // if (title && !title.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (description && !description.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (price && !price.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (country && !country.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (region && !region.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (condition && !condition.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (currency && !currency.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else if (image && !image.value) {\n                //   alert(\"Please fill in the missing blanks!\");\n                // } else {\n                // Post to server if users fill in all the inputs\n\n                this.setState({\n                  disabled: true\n                });\n                _context.next = 8;\n                return axios.post(\"http://localhost:8081/\", formData, config);\n\n              case 8:\n                // Post to '/upload' on the server\n                this.props.history.push(\"/\");\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function submit() {\n        return _submit.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          country = _this$state.country,\n          region = _this$state.region;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Create new item\")), React.createElement(\"div\", {\n        className: \"card-body text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"input\", {\n        name: \"title\",\n        id: \"title\",\n        maxLength: \"30\",\n        disabled: this.state.disabled,\n        type: \"text\",\n        onBlur: function onBlur(e) {\n          _this2.updateTitle(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"Enter item title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        id: \"imageBoxLabel\",\n        htmlFor: \"imageBox\",\n        className: \"btn btn-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Choose image\"), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"imageBox\",\n        id: \"imageBox\",\n        accept: \"image/*\",\n        onChange: function onChange(e) {\n          _this2.updateImage(e.target.files);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Price:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        id: \"currencyBox\",\n        defaultValue: \"default\",\n        onBlur: function onBlur(e) {\n          _this2.updateCurrency(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"default\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Select currency\"), React.createElement(\"option\", {\n        value: \"$\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"$\"), React.createElement(\"option\", {\n        value: \"\\u20AC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"\\u20AC\"), React.createElement(\"option\", {\n        value: \"\\xA3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"\\xA3\"), React.createElement(\"option\", {\n        value: \"\\xA5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"\\xA5\"), React.createElement(\"option\", {\n        value: \"\\u20A9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\u20A9\")), React.createElement(\"input\", {\n        id: \"priceBox\",\n        disabled: this.state.disabled,\n        type: \"number\",\n        min: \"0\",\n        onBlur: function onBlur(e) {\n          _this2.updatePrice(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"Enter the price of your item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Country & Region:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(CountryDropdown, {\n        id: \"countryBox\",\n        value: country,\n        onChange: function onChange(val) {\n          return _this2.updateCountry(val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), \"\\xA0\\xA0\", React.createElement(RegionDropdown, {\n        id: \"regionBox\",\n        country: country,\n        value: region,\n        onChange: function onChange(val) {\n          return _this2.updateRegion(val);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"condition\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Condition:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        defaultValue: \"default\",\n        id: \"conditionBox\",\n        onBlur: function onBlur(e) {\n          _this2.updateCondition(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"default\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Select condition\"), React.createElement(\"option\", {\n        value: \"New\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"New\"), React.createElement(\"option\", {\n        value: \"Used\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Used\"), React.createElement(\"option\", {\n        value: \"For parts or not working\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"For parts or not working\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"textarea\", {\n        id: \"descriptionBox\",\n        disabled: this.state.disabled,\n        type: \"text\",\n        onBlur: function onBlur(e) {\n          _this2.updateDescription(e.target.value);\n        },\n        className: \"form-control\",\n        placeholder: \"Enter the description of your item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"submitButton\",\n        disabled: this.state.disabled,\n        className: \"btn dark-space\",\n        onClick: function onClick() {\n          _this2.submit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return CreateItem;\n}(Component);\n\nexport default withRouter(CreateItem);","map":{"version":3,"sources":["/Users/lauirvin/Desktop/yummy/src/components/CreateItem/CreateItem.js"],"names":["React","Component","withRouter","auth0Client","axios","CountryDropdown","RegionDropdown","CreateItem","props","state","disabled","title","description","price","country","region","condition","currency","image","value","setState","e","target","files","val","data","formData","FormData","append","key","config","headers","Authorization","getIdToken","post","history","push","updateTitle","updateImage","updateCurrency","updatePrice","updateCountry","updateRegion","updateCondition","updateDescription","submit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport auth0Client from \"../../Auth\";\nimport axios from \"axios\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\n\nclass CreateItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n      title: \"\",\n      description: \"\",\n      price: \"\",\n      country: \"\",\n      region: \"\",\n      condition: \"\",\n      currency: \"\",\n      image: []\n    };\n  }\n\n  updateImage(value) {\n    this.setState({ image: e.target.files[0] });\n  }\n\n  updateCurrency(value) {\n    this.setState({\n      currency: value\n    });\n  }\n\n  updatePrice(value) {\n    this.setState({\n      price: value\n    });\n  }\n\n  updateCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  updateCondition(val) {\n    this.setState({\n      condition: val\n    });\n  }\n\n  updateRegion(val) {\n    this.setState({\n      region: val\n    });\n  }\n\n  updateDescription(value) {\n    this.setState({\n      description: value\n    });\n  }\n\n  updateTitle(value) {\n    this.setState({\n      title: value\n    });\n  }\n\n  async submit() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description,\n      price: this.state.price,\n      country: this.state.country,\n      region: this.state.region,\n      condition: this.state.condition,\n      currency: this.state.currency\n    };\n\n    const formData = new FormData();\n    formData.append(\"imageBox\", this.state.image); // Add image to form data\n\n    for (var key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${auth0Client.getIdToken()}`, // Check authorization and fetch token\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n\n    // var title = document.getElementById(\"title\");\n    // var description = document.getElementById(\"descriptionBox\");\n    // var price = document.getElementById(\"priceBox\");\n    // var country = document.getElementById(\"countryBox\");\n    // var region = document.getElementById(\"regionBox\");\n    // var condition = document.getElementById(\"conditionBox\");\n    // var currency = document.getElementById(\"currencyBox\");\n    // var image = document.getElementById(\"imageBox\");\n\n    // // Return alert if user does not fill in the inputs\n    // if (title && !title.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (description && !description.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (price && !price.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (country && !country.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (region && !region.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (condition && !condition.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (currency && !currency.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else if (image && !image.value) {\n    //   alert(\"Please fill in the missing blanks!\");\n    // } else {\n    // Post to server if users fill in all the inputs\n    this.setState({\n      disabled: true\n    });\n\n    await axios.post(\"http://localhost:8081/\", formData, config); // Post to '/upload' on the server\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    const { country, region } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Create new item</h3>\n              </div>\n              <div className=\"card-body text-left\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title:</label>\n                  <input\n                    name=\"title\"\n                    id=\"title\"\n                    maxLength=\"30\"\n                    disabled={this.state.disabled}\n                    type=\"text\"\n                    onBlur={e => {\n                      this.updateTitle(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Enter item title\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label\n                    id=\"imageBoxLabel\"\n                    htmlFor=\"imageBox\"\n                    className=\"btn btn-primary \"\n                  >\n                    Choose image\n                  </label>\n                  <input\n                    type=\"file\"\n                    name=\"imageBox\"\n                    id=\"imageBox\"\n                    accept=\"image/*\"\n                    onChange={e => {\n                      this.updateImage(e.target.files);\n                    }}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"price\">Price:</label>\n                  <br />\n                  <select\n                    id=\"currencyBox\"\n                    defaultValue=\"default\"\n                    onBlur={e => {\n                      this.updateCurrency(e.target.value);\n                    }}\n                  >\n                    <option value=\"default\" disabled>\n                      Select currency\n                    </option>\n                    <option value=\"$\">$</option>\n                    <option value=\"€\">€</option>\n                    <option value=\"£\">£</option>\n                    <option value=\"¥\">¥</option>\n                    <option value=\"₩\">₩</option>\n                  </select>\n                  <input\n                    id=\"priceBox\"\n                    disabled={this.state.disabled}\n                    type=\"number\"\n                    min=\"0\"\n                    onBlur={e => {\n                      this.updatePrice(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Enter the price of your item\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"price\">Country & Region:</label>\n                  <br />\n                  <CountryDropdown\n                    id=\"countryBox\"\n                    value={country}\n                    onChange={val => this.updateCountry(val)}\n                  />\n                  &nbsp;&nbsp;\n                  <RegionDropdown\n                    id=\"regionBox\"\n                    country={country}\n                    value={region}\n                    onChange={val => this.updateRegion(val)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"condition\">Condition:</label>\n                  <br />\n                  <select\n                    defaultValue=\"default\"\n                    id=\"conditionBox\"\n                    onBlur={e => {\n                      this.updateCondition(e.target.value);\n                    }}\n                  >\n                    <option value=\"default\" disabled>\n                      Select condition\n                    </option>\n                    <option value=\"New\">New</option>\n                    <option value=\"Used\">Used</option>\n                    <option value=\"For parts or not working\">\n                      For parts or not working\n                    </option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"description\">Description:</label>\n                  <textarea\n                    id=\"descriptionBox\"\n                    disabled={this.state.disabled}\n                    type=\"text\"\n                    onBlur={e => {\n                      this.updateDescription(e.target.value);\n                    }}\n                    className=\"form-control\"\n                    placeholder=\"Enter the description of your item\"\n                  />\n                </div>\n                <button\n                  id=\"submitButton\"\n                  disabled={this.state.disabled}\n                  className=\"btn dark-space\"\n                  onClick={() => {\n                    this.submit();\n                  }}\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreateItem);\n"]},"metadata":{},"sourceType":"module"}