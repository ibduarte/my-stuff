{"ast":null,"code":"import _classCallCheck from \"/Users/lauirvin/Desktop/yummy/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lauirvin/Desktop/yummy/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lauirvin/Desktop/yummy/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lauirvin/Desktop/yummy/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lauirvin/Desktop/yummy/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/lauirvin/Desktop/yummy/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/lauirvin/Desktop/yummy/frontend/src/components/CreateRecipe/UploadImage.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nvar UploadImage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UploadImage, _React$Component);\n\n  function UploadImage(props) {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadImage).call(this, props));\n    _this.state = {\n      file: null,\n      available: false\n    };\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(e) {\n      e.preventDefault();\n      var formData = new FormData();\n      formData.append(\"myImage\", this.state.file); // Add image to form data\n\n      var config = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      axios.post(\"http://localhost:8081/upload\", formData, config) // Post to '/upload' on the server\n      .then(function (response) {\n        alert(\"Recipe created!\"); // Alert if recipe is created\n      }).catch(function (error) {}); // Return error if recipe failed to create\n    }\n  }, {\n    key: \"updateImageStatus\",\n    value: function updateImageStatus() {\n      this.setState({\n        available: true\n      });\n      console.log(this.state.available);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        file: e.target.files[0]\n      }); // Update state to one file only (first file)\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"fileupload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Upload Image:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        id: \"myImageLabel\",\n        htmlFor: \"myImage\",\n        className: \"btn btn-primary \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Choose image\"), React.createElement(\"input\", {\n        id: \"myImage\",\n        type: \"file\",\n        name: \"myImage\",\n        accept: \"image/x-png,image/jpeg\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"uploadButton\",\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Upload\"));\n    }\n  }]);\n\n  return UploadImage;\n}(React.Component);\n\nexport { UploadImage as default };","map":{"version":3,"sources":["/Users/lauirvin/Desktop/yummy/frontend/src/components/CreateRecipe/UploadImage.js"],"names":["React","axios","UploadImage","props","state","file","available","onFormSubmit","bind","onChange","e","preventDefault","formData","FormData","append","config","headers","post","then","response","alert","catch","error","setState","console","log","target","files","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,W;;;;;AACnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AAPiB;AAQlB;;;;iCACYE,C,EAAG;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKV,KAAL,CAAWC,IAAtC,EAHc,CAG+B;;AAC7C,UAAMU,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAKAf,MAAAA,KAAK,CACFgB,IADH,CACQ,8BADR,EACwCL,QADxC,EACkDG,MADlD,EAC0D;AAD1D,OAEGG,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBC,QAAAA,KAAK,CAAC,iBAAD,CAAL,CADgB,CACU;AAC3B,OAJH,EAKGC,KALH,CAKS,UAAAC,KAAK,EAAI,CAAE,CALpB,EATc,CAcS;AACxB;;;wCAEmB;AAClB,WAAKC,QAAL,CAAc;AAACjB,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWE,SAAvB;AACD;;;6BAEQI,C,EAAG;AACV,WAAKa,QAAL,CAAc;AAAElB,QAAAA,IAAI,EAAEK,CAAC,CAACgB,MAAF,CAASC,KAAT,CAAe,CAAf;AAAR,OAAd,EADU,CACkC;AAE7C;;;6BAEQ;AACP,aACE;AAAM,QAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,OAAO,EAAC,SAAjC;AAA2C,QAAA,SAAS,EAAC,kBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAME;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,SAHP;AAIE,QAAA,MAAM,EAAC,wBAJT;AAKE,QAAA,QAAQ,EAAE,KAAKE,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAaE;AAAQ,QAAA,EAAE,EAAC,cAAX;AAA0B,QAAA,SAAS,EAAC,iBAApC;AAAsD,QAAA,IAAI,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADF;AAmBD;;;;EAzDsCT,KAAK,CAAC4B,S;;SAA1B1B,W","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nexport default class UploadImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      available: false\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file); // Add image to form data\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios\n      .post(\"http://localhost:8081/upload\", formData, config) // Post to '/upload' on the server\n      .then(response => {\n        alert(\"Recipe created!\"); // Alert if recipe is created\n      })\n      .catch(error => {}); // Return error if recipe failed to create\n  }\n\n  updateImageStatus() {\n    this.setState({available: true})\n    console.log(this.state.available)\n  }\n\n  onChange(e) {\n    this.setState({ file: e.target.files[0] }); // Update state to one file only (first file)\n\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <label htmlFor=\"fileupload\">Upload Image:</label>\n        <br />\n        <label id=\"myImageLabel\" htmlFor=\"myImage\" className=\"btn btn-primary \">\n          Choose image\n        </label>\n        <input\n          id=\"myImage\"\n          type=\"file\"\n          name=\"myImage\"\n          accept=\"image/x-png,image/jpeg\"\n          onChange={this.onChange}\n        />\n        <button id=\"uploadButton\" className=\"btn btn-success\" type=\"submit\">\n          Upload\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}